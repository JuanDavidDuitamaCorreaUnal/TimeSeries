resARPURO=residualesARPURO
cum=cumsum(resARPURO)/sd(resARPURO)
N=length(resARPURO)
cumq=cumsum(resARPURO^2)/sum(resARPURO^2)
Af=0.948 ###Cuantil del 95% para la estad?stica cusum
co=0.09821####Valor del cuantil aproximado para cusumsq para n/2 aprox 130
LS=Af*sqrt(N)+2*Af*c(1:length(resARPURO))/sqrt(N)
LI=-LS
LQS=co+(1:length(resARPURO))/N
LQI=-co+(1:length(resARPURO))/N
### ARIMA -------------------------------------------------------------------
#####Ajuste del Modelo
####Note que entramos la serie original
AjusteArima151=forecast::Arima(DesempleoTS,order = c(15,1,1),lambda = 1)
AjusteArimaRef=forecast::Arima(DesempleoTS,order = c(15,1,1),lambda = 1, fixed=c(NA,NA,NA,NA,NA,0,0,NA,0,NA,NA,NA,NA,0,NA,NA))
residualesARIMA=AjusteArimaRef$residuals
###Estad?sticas CUSUM
resARIMA=residualesARIMA
cum2=cumsum(resARIMA)/sd(resARIMA)
N2=length(resARIMA)
cumq2=cumsum(resARIMA^2)/sum(resARIMA^2)
Af=0.948 ###Cuantil del 95% para la estad?stica cusum
co=0.09821
LS2=Af*sqrt(N2)+2*Af*c(1:length(resARIMA))/sqrt(N2)
LI2=-LS2
LQS2=co+(1:length(resARIMA))/N2
LQI2=-co+(1:length(resARIMA))/N2
#####Fase de Pronósticos
pronosticos151=forecast::forecast(AjusteArimaRef,h=12,level=0.95)
## SARIMA ------------------------------------------------------------------
DdDesempleoTS=diff(DiferenciaOrd,lag=12)
modeloSARIMA = Arima(DesempleoTS, c(0, 1, 0),seasonal = list(order = c(5, 1, 1), period = 12),lambda = 1)
residualesSARIMA <- modeloSARIMA$residuals
###Estad?ticas CUSUM
resSARIMA=residualesSARIMA
cum3=cumsum(resSARIMA)/sd(resSARIMA)
N3=length(resSARIMA)
cumq3=cumsum(resSARIMA^2)/sum(resSARIMA^2)
Af3=0.948 ###Cuantil del 95% para la estad?stica cusum
co3=0.09821####Valor del cuantil aproximado para cusumsq para 140
LS3=Af3*sqrt(N3)+2*Af3*c(1:length(resSARIMA))/sqrt(N3)
LI3=-LS3
LQS3=co3+(1:length(resSARIMA))/N3
LQI3=-co3+(1:length(resSARIMA))/N3
#SARIMA definitivo con outliers
modeloSARIMAdef = Arima(DesempleoTS, c(1, 1, 2),seasonal = list(order = c(2, 1, 1), period = 12),lambda = 1)
resSARIMAdef <- modeloSARIMAdef$residuals
n=length(DesempleoTS)
coef=coefs2poly(modeloSARIMAdef)
#coef
outliers= tsoutliers::locate.outliers(resSARIMAdef,coef)
###tstat se compara con C=3
xreg = outliers.effects(outliers, n)
SARIMA_out = update(modeloSARIMAdef, xreg = xreg)
#Ahora sí los propios residuales
residuales_propios <- SARIMA_out$residuals
###Estad?ticas CUSUM
res4=residuales_propios
cum4=cumsum(res4)/sd(res4)
N4=length(res4)
cumq4=cumsum(res4^2)/sum(res4^2)
Af4=0.948 ###Cuantil del 95% para la estad?stica cusum
co4=0.09821####Valor del cuantil aproximado para cusumsq para 140
LS4=Af4*sqrt(N4)+2*Af4*c(1:length(res4))/sqrt(N4)
LI4=-LS4
LQS4=co4+(1:length(res4))/N4
LQI4=-co4+(1:length(res4))/N4
#Rolling
#SARIMA_out
#refit <- Arima(DesempleoTS, model=fitmodelo)
fc <- window(fitted(SARIMA_out), start=c(2019,6))
esta_param_modelo<-coef(SARIMA_out)
h <- 1
train = window(DesempleoTS,end=time(DesempleoTS)[ntrain])
test = window(DesempleoTS,start=time(DesempleoTS)[ntrain]+1/12)
n <- length(test) - h + 1
fitmodelo <- update(SARIMA_out,fixed=esta_param_modelo)
fc <- ts(numeric(n), start=c(2019,6), freq=12)
for(i in 1:n)
{
x <- window(DesempleoTS, end=c(2019, 5+(i-1)))
refit <- forecast::Arima(x, model=fitmodelo, xreg = xreg[1:(221+(i-1)),])
fc[i] <- forecast::forecast(refit, h=h,xreg = t(as.matrix(xreg[(221+i),])))$mean[h]
}
dife=(test-fc)^2
ecm=(1/(length(test)))*sum(dife)
#ecm
# PIB ---------------------------------------------------------------------
PIB3 <- read_excel(paste0(Ruta,"/Datos/PIB.xlsx"), range = "AS18:AS93", col_names = FALSE)
PIB3 <- data.frame('Fecha'=seq.Date(from=as.Date("2005-03-01"),to=as.Date("2023-12-01"),by="quarter"),'PIBtrimestral'=PIB3$...1)
#Objeto ts
PIB3TS <- ts(PIB3, start = c(2005, 1), end = c(2023, 4), frequency = 4)
source(paste0(Ruta,"/ui.R"))
source(paste0(Ruta,"/server.R"))
shinyApp(ui=ui,server = server)
runApp()
runApp()
#::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::#
#             App - proyecto series de tiempo                #
#             Desarrollado por: Juan Duitama                 #
#                          2024-1                            #
#::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::#
rm(list =ls())
# Librerías ---------------------------------------------------------------
library(shiny)
library(bslib)
library(bsicons)
library(shinyWidgets)
library(shinydashboard)
library(leaflet)
library(tidyverse)
library(readxl)
library(zoo)
library(dplyr)
library(lubridate)
library(plotly)
library(ggsci)
library(scales)
library(viridis)
library(plotly)
library(forecast)
library(MASS)
library(tidyverse)
library(lubridate)
library(timetk)
library(tibble)
library(zoo)
library(tsibble)
library(feasts)
library(fable)
library(cowplot)
library(astsa)
library(TSstudio)
library(fabletools)
library(TSA)
library(parsnip)
library(rsample)
library(modeltime)
library(tidymodels)
library(lmtest)
library(tseries)
library(urca)
library(uroot)
library(fUnitRoots)
library(aTSA)
library(sarima)
library(tsoutliers)
library(fpp)
library(here)
#Ruta<- here::here()
Ruta<-"D:/Estadística/Semestres/Semestre 9/Series de Tiempo Univariadas/Shiny"
setwd(Ruta)
# Desempleo ---------------------------------------------------------------
Desempleo <- read_excel(paste0(Ruta,"/Datos/Desempleo.xlsx"), skip = 5, n_max = 276)
Desempleo <- subset(Desempleo, select = -`Tasa de ocupación (%)`)
colnames(Desempleo)<-c("AnioMes","TasaDesempleo")
Desempleo$AnioMes<-paste0(Desempleo$AnioMes,"-01")
Desempleo$AnioMes<-as.Date(Desempleo$AnioMes,format = "%Y-%m-%d")
#Objeto ts
DesempleoTS <- ts(rev(Desempleo$TasaDesempleo), start = c(2001, 1), end = c(2023, 12), frequency = 12)
DiferenciaOrd<-diff(DesempleoTS)
DiferTSibl<-as_tsibble(DiferenciaOrd)
#Estimación de la estacionalidad
ajuste_final_models<-DiferTSibl%>%model(
`Fourier1DesempleoDiff`=ARIMA(value~fourier(K=1)+pdq(0, 0, 0) + PDQ(0, 0, 0)),#1 componente de Fourier
`Fourier2DesempleoDiff`=ARIMA(value~fourier(K=2)+pdq(0, 0, 0) + PDQ(0, 0, 0)),#2 componente de Fourier
`Fourier3DesempleoDiff`=ARIMA(value~fourier(K=3)+pdq(0, 0, 0) + PDQ(0, 0, 0)),#3 componente de Fourier
`Fourier4DesempleoDiff`=ARIMA(value~fourier(K=4)+pdq(0, 0, 0) + PDQ(0, 0, 0)),#4 componente de Fourier
`DummyDesempleoDiff`=ARIMA(value~season()+pdq(0, 0, 0) + PDQ(0, 0, 0))#Ajuste dummy
)
glance(ajuste_final_models)
Modelo_serie_diff_models<-DiferTSibl%>%left_join(fitted(ajuste_final_models)|>group_by(.model)%>%
pivot_wider(names_from = .model, values_from = .fitted))
### Suavizamiento exponencial -----------------------------------------------
Train=ts(DesempleoTS[1:221], start = c(2001, 1),frequency = 12)
Test=ts(DesempleoTS[222:276],start=c(2019,6),frequency = 12)
h=1
lserie=length(DesempleoTS)
ntrain=trunc(length(DesempleoTS)*0.80)+1 ##% del datos en el conjunto de entrenamiento es del 80%.
ntrain
time(DesempleoTS)
time(DesempleoTS)[ntrain]###Me entrega la ultima fecha de la posición ntrain
#Partiendo la serie en entrenamiento y test
train=window(DesempleoTS,end=time(DesempleoTS)[ntrain])
test=window(DesempleoTS,start=time(DesempleoTS)[ntrain]+1/12)##1/12 porque es la fracción que corresponde a un mes
length(train)
ntest=length(test)
ntest ##Me define el valor de origins, o de ventanas de rolling.
lserie ### Comparar los valores
fchstepahe=matrix(0,nrow=ntest,ncol=h) ##Crea una Columna para los h-pasos adelante
### verval contiene los verdaderos valores de la serie en el conjunto de prueba con los que se compararán los pronósticos.
verval=cbind(test[1:ntest])
###Observación: Note que que esos son las estimaciones de los parámetros de suavizamiento. Se puede también hacer una grilla de valores para explorar si hay unos valores mejores.
# por ejemplo como sigue:
require(utils)
### ARMA --------------------------------------------------------------------
DesempNSDiff <- DiferenciaOrd-Modelo_serie_diff_models$DummyDesempleoDiff
ARPURODesem=Arima(DesempNSDiff,order=c(1,0,0),include.mean = FALSE)
Arima_automatico_desempleo=forecast::auto.arima(DesempNSDiff,d=0,D=0,max.p=5,max.q=5,start.p=0, start.q=0,seasonal=FALSE,max.order=10,stationary=TRUE,ic="bic",stepwise=FALSE,allowmean = TRUE)
# Análisis de residuales
residualesARPURO=ARPURODesem$residuals
###Estad?sticas CUSUM
resARPURO=residualesARPURO
cum=cumsum(resARPURO)/sd(resARPURO)
N=length(resARPURO)
cumq=cumsum(resARPURO^2)/sum(resARPURO^2)
Af=0.948 ###Cuantil del 95% para la estad?stica cusum
co=0.09821####Valor del cuantil aproximado para cusumsq para n/2 aprox 130
LS=Af*sqrt(N)+2*Af*c(1:length(resARPURO))/sqrt(N)
LI=-LS
LQS=co+(1:length(resARPURO))/N
LQI=-co+(1:length(resARPURO))/N
### ARIMA -------------------------------------------------------------------
#####Ajuste del Modelo
####Note que entramos la serie original
AjusteArima151=forecast::Arima(DesempleoTS,order = c(15,1,1),lambda = 1)
AjusteArimaRef=forecast::Arima(DesempleoTS,order = c(15,1,1),lambda = 1, fixed=c(NA,NA,NA,NA,NA,0,0,NA,0,NA,NA,NA,NA,0,NA,NA))
residualesARIMA=AjusteArimaRef$residuals
###Estad?sticas CUSUM
resARIMA=residualesARIMA
cum2=cumsum(resARIMA)/sd(resARIMA)
N2=length(resARIMA)
cumq2=cumsum(resARIMA^2)/sum(resARIMA^2)
Af=0.948 ###Cuantil del 95% para la estad?stica cusum
co=0.09821
LS2=Af*sqrt(N2)+2*Af*c(1:length(resARIMA))/sqrt(N2)
LI2=-LS2
LQS2=co+(1:length(resARIMA))/N2
LQI2=-co+(1:length(resARIMA))/N2
#####Fase de Pronósticos
pronosticos151=forecast::forecast(AjusteArimaRef,h=12,level=0.95)
## SARIMA ------------------------------------------------------------------
DdDesempleoTS=diff(DiferenciaOrd,lag=12)
modeloSARIMA = Arima(DesempleoTS, c(0, 1, 0),seasonal = list(order = c(5, 1, 1), period = 12),lambda = 1)
residualesSARIMA <- modeloSARIMA$residuals
###Estad?ticas CUSUM
resSARIMA=residualesSARIMA
cum3=cumsum(resSARIMA)/sd(resSARIMA)
N3=length(resSARIMA)
cumq3=cumsum(resSARIMA^2)/sum(resSARIMA^2)
Af3=0.948 ###Cuantil del 95% para la estad?stica cusum
co3=0.09821####Valor del cuantil aproximado para cusumsq para 140
LS3=Af3*sqrt(N3)+2*Af3*c(1:length(resSARIMA))/sqrt(N3)
LI3=-LS3
LQS3=co3+(1:length(resSARIMA))/N3
LQI3=-co3+(1:length(resSARIMA))/N3
#SARIMA definitivo con outliers
modeloSARIMAdef = Arima(DesempleoTS, c(1, 1, 2),seasonal = list(order = c(2, 1, 1), period = 12),lambda = 1)
resSARIMAdef <- modeloSARIMAdef$residuals
n=length(DesempleoTS)
coef=coefs2poly(modeloSARIMAdef)
#coef
outliers= tsoutliers::locate.outliers(resSARIMAdef,coef)
###tstat se compara con C=3
xreg = outliers.effects(outliers, n)
SARIMA_out = update(modeloSARIMAdef, xreg = xreg)
#Ahora sí los propios residuales
residuales_propios <- SARIMA_out$residuals
###Estad?ticas CUSUM
res4=residuales_propios
cum4=cumsum(res4)/sd(res4)
N4=length(res4)
cumq4=cumsum(res4^2)/sum(res4^2)
Af4=0.948 ###Cuantil del 95% para la estad?stica cusum
co4=0.09821####Valor del cuantil aproximado para cusumsq para 140
LS4=Af4*sqrt(N4)+2*Af4*c(1:length(res4))/sqrt(N4)
LI4=-LS4
LQS4=co4+(1:length(res4))/N4
LQI4=-co4+(1:length(res4))/N4
#Rolling
#SARIMA_out
#refit <- Arima(DesempleoTS, model=fitmodelo)
fc <- window(fitted(SARIMA_out), start=c(2019,6))
esta_param_modelo<-coef(SARIMA_out)
h <- 1
train = window(DesempleoTS,end=time(DesempleoTS)[ntrain])
test = window(DesempleoTS,start=time(DesempleoTS)[ntrain]+1/12)
n <- length(test) - h + 1
fitmodelo <- update(SARIMA_out,fixed=esta_param_modelo)
fc <- ts(numeric(n), start=c(2019,6), freq=12)
for(i in 1:n)
{
x <- window(DesempleoTS, end=c(2019, 5+(i-1)))
refit <- forecast::Arima(x, model=fitmodelo, xreg = xreg[1:(221+(i-1)),])
fc[i] <- forecast::forecast(refit, h=h,xreg = t(as.matrix(xreg[(221+i),])))$mean[h]
}
dife=(test-fc)^2
ecm=(1/(length(test)))*sum(dife)
#ecm
MSE_Desempleo <- data.frame(
Modelo = c("SARIMA", "Suavizamiento exponencial", "Árboles", "Red multicapa", "Red GRU"),
MSE = c(0.32, 3.75, 10.74, 6.55, 12.44)
)
# PIB ---------------------------------------------------------------------
PIB3 <- read_excel(paste0(Ruta,"/Datos/PIB.xlsx"), range = "AS18:AS93", col_names = FALSE)
PIB3 <- data.frame('Fecha'=seq.Date(from=as.Date("2005-03-01"),to=as.Date("2023-12-01"),by="quarter"),'PIBtrimestral'=PIB3$...1)
#Objeto ts
PIB3TS <- ts(PIB3, start = c(2005, 1), end = c(2023, 4), frequency = 4)
source(paste0(Ruta,"/ui.R"))
library(DT)
runApp()
runApp()
runApp()
Ruta<-setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
Ruta
Ruta<-setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
#::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::#
#             App - proyecto series de tiempo                #
#             Desarrollado por: Juan Duitama                 #
#                          2024-1                            #
#::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::#
rm(list =ls())
# Librerías ---------------------------------------------------------------
library(shiny)
library(bslib)
library(bsicons)
library(shinyWidgets)
library(shinydashboard)
library(leaflet)
library(tidyverse)
library(readxl)
library(zoo)
library(dplyr)
library(lubridate)
library(plotly)
library(ggsci)
library(scales)
library(viridis)
library(plotly)
library(forecast)
library(MASS)
library(tidyverse)
library(lubridate)
library(timetk)
library(tibble)
library(zoo)
library(tsibble)
library(feasts)
library(fable)
library(cowplot)
library(astsa)
library(TSstudio)
library(fabletools)
library(TSA)
library(parsnip)
library(rsample)
library(modeltime)
library(tidymodels)
library(lmtest)
library(tseries)
library(urca)
library(uroot)
library(fUnitRoots)
library(aTSA)
library(sarima)
library(tsoutliers)
library(fpp)
library(here)
library(DT)
Ruta<-setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
#Ruta<- here::here()
#Ruta<-"D:/Estadística/Semestres/Semestre 9/Series de Tiempo Univariadas/Shiny"
setwd(Ruta)
# Desempleo ---------------------------------------------------------------
Desempleo <- read_excel(paste0(Ruta,"/Datos/Desempleo.xlsx"), skip = 5, n_max = 276)
Desempleo <- subset(Desempleo, select = -`Tasa de ocupación (%)`)
colnames(Desempleo)<-c("AnioMes","TasaDesempleo")
Desempleo$AnioMes<-paste0(Desempleo$AnioMes,"-01")
Desempleo$AnioMes<-as.Date(Desempleo$AnioMes,format = "%Y-%m-%d")
#Objeto ts
DesempleoTS <- ts(rev(Desempleo$TasaDesempleo), start = c(2001, 1), end = c(2023, 12), frequency = 12)
DiferenciaOrd<-diff(DesempleoTS)
DiferTSibl<-as_tsibble(DiferenciaOrd)
#Estimación de la estacionalidad
ajuste_final_models<-DiferTSibl%>%model(
`Fourier1DesempleoDiff`=ARIMA(value~fourier(K=1)+pdq(0, 0, 0) + PDQ(0, 0, 0)),#1 componente de Fourier
`Fourier2DesempleoDiff`=ARIMA(value~fourier(K=2)+pdq(0, 0, 0) + PDQ(0, 0, 0)),#2 componente de Fourier
`Fourier3DesempleoDiff`=ARIMA(value~fourier(K=3)+pdq(0, 0, 0) + PDQ(0, 0, 0)),#3 componente de Fourier
`Fourier4DesempleoDiff`=ARIMA(value~fourier(K=4)+pdq(0, 0, 0) + PDQ(0, 0, 0)),#4 componente de Fourier
`DummyDesempleoDiff`=ARIMA(value~season()+pdq(0, 0, 0) + PDQ(0, 0, 0))#Ajuste dummy
)
glance(ajuste_final_models)
Modelo_serie_diff_models<-DiferTSibl%>%left_join(fitted(ajuste_final_models)|>group_by(.model)%>%
pivot_wider(names_from = .model, values_from = .fitted))
### Suavizamiento exponencial -----------------------------------------------
Train=ts(DesempleoTS[1:221], start = c(2001, 1),frequency = 12)
Test=ts(DesempleoTS[222:276],start=c(2019,6),frequency = 12)
h=1
lserie=length(DesempleoTS)
ntrain=trunc(length(DesempleoTS)*0.80)+1 ##% del datos en el conjunto de entrenamiento es del 80%.
ntrain
time(DesempleoTS)
time(DesempleoTS)[ntrain]###Me entrega la ultima fecha de la posición ntrain
#Partiendo la serie en entrenamiento y test
train=window(DesempleoTS,end=time(DesempleoTS)[ntrain])
test=window(DesempleoTS,start=time(DesempleoTS)[ntrain]+1/12)##1/12 porque es la fracción que corresponde a un mes
length(train)
ntest=length(test)
ntest ##Me define el valor de origins, o de ventanas de rolling.
lserie ### Comparar los valores
fchstepahe=matrix(0,nrow=ntest,ncol=h) ##Crea una Columna para los h-pasos adelante
### verval contiene los verdaderos valores de la serie en el conjunto de prueba con los que se compararán los pronósticos.
verval=cbind(test[1:ntest])
###Observación: Note que que esos son las estimaciones de los parámetros de suavizamiento. Se puede también hacer una grilla de valores para explorar si hay unos valores mejores.
# por ejemplo como sigue:
require(utils)
### ARMA --------------------------------------------------------------------
DesempNSDiff <- DiferenciaOrd-Modelo_serie_diff_models$DummyDesempleoDiff
ARPURODesem=Arima(DesempNSDiff,order=c(1,0,0),include.mean = FALSE)
Arima_automatico_desempleo=forecast::auto.arima(DesempNSDiff,d=0,D=0,max.p=5,max.q=5,start.p=0, start.q=0,seasonal=FALSE,max.order=10,stationary=TRUE,ic="bic",stepwise=FALSE,allowmean = TRUE)
# Análisis de residuales
residualesARPURO=ARPURODesem$residuals
###Estad?sticas CUSUM
resARPURO=residualesARPURO
cum=cumsum(resARPURO)/sd(resARPURO)
N=length(resARPURO)
cumq=cumsum(resARPURO^2)/sum(resARPURO^2)
Af=0.948 ###Cuantil del 95% para la estad?stica cusum
co=0.09821####Valor del cuantil aproximado para cusumsq para n/2 aprox 130
LS=Af*sqrt(N)+2*Af*c(1:length(resARPURO))/sqrt(N)
LI=-LS
LQS=co+(1:length(resARPURO))/N
LQI=-co+(1:length(resARPURO))/N
### ARIMA -------------------------------------------------------------------
#####Ajuste del Modelo
####Note que entramos la serie original
AjusteArima151=forecast::Arima(DesempleoTS,order = c(15,1,1),lambda = 1)
AjusteArimaRef=forecast::Arima(DesempleoTS,order = c(15,1,1),lambda = 1, fixed=c(NA,NA,NA,NA,NA,0,0,NA,0,NA,NA,NA,NA,0,NA,NA))
residualesARIMA=AjusteArimaRef$residuals
###Estad?sticas CUSUM
resARIMA=residualesARIMA
cum2=cumsum(resARIMA)/sd(resARIMA)
N2=length(resARIMA)
cumq2=cumsum(resARIMA^2)/sum(resARIMA^2)
Af=0.948 ###Cuantil del 95% para la estad?stica cusum
co=0.09821
LS2=Af*sqrt(N2)+2*Af*c(1:length(resARIMA))/sqrt(N2)
LI2=-LS2
LQS2=co+(1:length(resARIMA))/N2
LQI2=-co+(1:length(resARIMA))/N2
#####Fase de Pronósticos
pronosticos151=forecast::forecast(AjusteArimaRef,h=12,level=0.95)
## SARIMA ------------------------------------------------------------------
DdDesempleoTS=diff(DiferenciaOrd,lag=12)
modeloSARIMA = Arima(DesempleoTS, c(0, 1, 0),seasonal = list(order = c(5, 1, 1), period = 12),lambda = 1)
residualesSARIMA <- modeloSARIMA$residuals
###Estad?ticas CUSUM
resSARIMA=residualesSARIMA
cum3=cumsum(resSARIMA)/sd(resSARIMA)
N3=length(resSARIMA)
cumq3=cumsum(resSARIMA^2)/sum(resSARIMA^2)
Af3=0.948 ###Cuantil del 95% para la estad?stica cusum
co3=0.09821####Valor del cuantil aproximado para cusumsq para 140
LS3=Af3*sqrt(N3)+2*Af3*c(1:length(resSARIMA))/sqrt(N3)
LI3=-LS3
LQS3=co3+(1:length(resSARIMA))/N3
LQI3=-co3+(1:length(resSARIMA))/N3
#SARIMA definitivo con outliers
modeloSARIMAdef = Arima(DesempleoTS, c(1, 1, 2),seasonal = list(order = c(2, 1, 1), period = 12),lambda = 1)
resSARIMAdef <- modeloSARIMAdef$residuals
n=length(DesempleoTS)
coef=coefs2poly(modeloSARIMAdef)
#coef
outliers= tsoutliers::locate.outliers(resSARIMAdef,coef)
###tstat se compara con C=3
xreg = outliers.effects(outliers, n)
SARIMA_out = update(modeloSARIMAdef, xreg = xreg)
#Ahora sí los propios residuales
residuales_propios <- SARIMA_out$residuals
###Estad?ticas CUSUM
res4=residuales_propios
cum4=cumsum(res4)/sd(res4)
N4=length(res4)
cumq4=cumsum(res4^2)/sum(res4^2)
Af4=0.948 ###Cuantil del 95% para la estad?stica cusum
co4=0.09821####Valor del cuantil aproximado para cusumsq para 140
LS4=Af4*sqrt(N4)+2*Af4*c(1:length(res4))/sqrt(N4)
LI4=-LS4
LQS4=co4+(1:length(res4))/N4
LQI4=-co4+(1:length(res4))/N4
#Rolling
#SARIMA_out
#refit <- Arima(DesempleoTS, model=fitmodelo)
fc <- window(fitted(SARIMA_out), start=c(2019,6))
esta_param_modelo<-coef(SARIMA_out)
h <- 1
train = window(DesempleoTS,end=time(DesempleoTS)[ntrain])
test = window(DesempleoTS,start=time(DesempleoTS)[ntrain]+1/12)
n <- length(test) - h + 1
fitmodelo <- update(SARIMA_out,fixed=esta_param_modelo)
fc <- ts(numeric(n), start=c(2019,6), freq=12)
for(i in 1:n)
{
x <- window(DesempleoTS, end=c(2019, 5+(i-1)))
refit <- forecast::Arima(x, model=fitmodelo, xreg = xreg[1:(221+(i-1)),])
fc[i] <- forecast::forecast(refit, h=h,xreg = t(as.matrix(xreg[(221+i),])))$mean[h]
}
dife=(test-fc)^2
ecm=(1/(length(test)))*sum(dife)
#ecm
MSE_Desempleo <- data.frame(
Modelo = c("SARIMA", "Suavizamiento exponencial", "Árboles", "Red multicapa", "Red GRU"),
MSE = c(0.32, 3.75, 10.74, 6.55, 12.44)
)
# PIB ---------------------------------------------------------------------
PIB3 <- read_excel(paste0(Ruta,"/Datos/PIB.xlsx"), range = "AS18:AS93", col_names = FALSE)
PIB3 <- data.frame('Fecha'=seq.Date(from=as.Date("2005-03-01"),to=as.Date("2023-12-01"),by="quarter"),'PIBtrimestral'=PIB3$...1)
#Objeto ts
PIB3TS <- ts(PIB3, start = c(2005, 1), end = c(2023, 4), frequency = 4)
source(paste0(Ruta,"/ui.R"))
source(paste0(Ruta,"/server.R"))
shinyApp(ui=ui,server = server)
